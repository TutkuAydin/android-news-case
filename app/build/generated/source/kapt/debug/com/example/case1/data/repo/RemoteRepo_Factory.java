// Generated by Dagger (https://dagger.dev).
package com.example.case1.data.repo;

import com.example.case1.data.apiservice.APIRequest;
import com.example.case1.data.mappers.ArticleMapper;
import dagger.Lazy;
import dagger.internal.DoubleCheck;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RemoteRepo_Factory implements Factory<RemoteRepo> {
  private final Provider<APIRequest> apiServiceProvider;

  private final Provider<ArticleMapper> articleMapperProvider;

  public RemoteRepo_Factory(Provider<APIRequest> apiServiceProvider,
      Provider<ArticleMapper> articleMapperProvider) {
    this.apiServiceProvider = apiServiceProvider;
    this.articleMapperProvider = articleMapperProvider;
  }

  @Override
  public RemoteRepo get() {
    return newInstance(apiServiceProvider.get(), DoubleCheck.lazy(articleMapperProvider));
  }

  public static RemoteRepo_Factory create(Provider<APIRequest> apiServiceProvider,
      Provider<ArticleMapper> articleMapperProvider) {
    return new RemoteRepo_Factory(apiServiceProvider, articleMapperProvider);
  }

  public static RemoteRepo newInstance(APIRequest apiService, Lazy<ArticleMapper> articleMapper) {
    return new RemoteRepo(apiService, articleMapper);
  }
}
